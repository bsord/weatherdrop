name: Tests

on:
  pull_request:
    branches:
      - 'main'

jobs:
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
          
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build & Push Base Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ github.repository }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

  vuln-scan:
    name: Vulnerability Scan
    needs: docker-build
    runs-on: ubuntu-18.04
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ github.repository }}:${{ github.sha }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'

  chart-test:
    name: Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.1.0

      - name: Update chart image tag
        if: ${{ steps.get-next-version.outputs.skipped == 'false' }}
        run: |
          sed -r -i 's/(appVersion:[^*])([[:alnum:].]*)/\1${{ github.sha }}/g' ./chart/Chart.yaml

      - name: Run chart-testing (lint)
        run: ct lint --chart-dirs ./chart

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0

      - name: Run chart-testing (install)
        run: ct install --chart-dirs ./chart
  